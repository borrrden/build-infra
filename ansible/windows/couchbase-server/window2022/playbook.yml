---
- hosts: all

  tasks:
    - name: Disable Windows antivirus during setup
      win_shell: Add-MpPreference -ExclusionPath "C:"

    - name: Copy patch_via_gerrit
      include_role:
        name: ../../../common/roles/patch_via_gerrit

    - name: Make temp dir
      win_file:
        path: C:\Temp
        state: directory

    # Needed for WiX Toolset
    - name: "Enable .NET Framework 3.5"
      win_feature:
        name: "NET-Framework-Core"
        state: present

    - name: "Install Python 3"
      win_chocolatey:
        name: python310
        force: yes
      tags:
      - python

    - name: "Provide python3 alias"
      win_shell: copy C:\Python310\python.exe C:\Python310\python3.exe
      args:
        creates: C:\Python310\python3.exe
      tags:
      - python

    - name: "Provide python3.10 alias"
      win_shell: copy C:\Python310\python.exe C:\Python310\python3.10.exe
      args:
        creates: C:\Python37\python3.10.exe
      tags:
      - python

    - name: "Install tools"
      win_chocolatey:
        name: "{{ item }}"
        allow_empty_checksums: "yes"
      with_items:
        - 7zip.commandline
        - cmake
        - curl
        - git
        - googlechrome
        - insted
        - jq
        - MinGW
        - nasm
        - ninja
        - pandoc
        - ruby
        - strawberryperl
        - vcredist140
        - vscode
        - wixtoolset

    - name: Install JDK for Jenkins
      win_chocolatey:
        name: openjdk
        state: latest

    - name: Create download area for Ansible
      win_file:
        path: "{{ targetvolume | default('c') }}:\\ansible_files"
        state: directory
      tags:
        - setup

    - name: Create required "[vol]:\\Program Files (x86)\\Common Files\\Merge Modules" directory
      win_file:
          path: "{{ targetvolume | default('c') }}:\\Program Files (x86)\\Common Files\\Merge Modules"
          state: directory

    - name: Download older VS CRT Merge Modules
      win_get_url:
          url: "{{ item.url }}"
          dest: "{{ targetvolume | default('c') }}:\\Program Files (x86)\\Common Files\\Merge Modules\\{{ item.filename }}"
          force: no
      with_items:
        - url: http://latestbuilds.service.couchbase.com/buildteam/downloads/winbits/Microsoft_VC100_CRT_x64.msm
          filename: Microsoft_VC100_CRT_x64.msm
        - url: http://latestbuilds.service.couchbase.com/buildteam/downloads/winbits/Microsoft_VC120_CRT_x64.msm
          filename: Microsoft_VC120_CRT_x64.msm
        - url: http://latestbuilds.service.couchbase.com/buildteam/downloads/winbits/Microsoft_VC140_CRT_x64.msm
          filename: Microsoft_VC140_CRT_x64.msm
        - url: http://latestbuilds.service.couchbase.com/buildteam/downloads/winbits/Microsoft_VC142_CRT_x64.msm
          filename: Microsoft_VC142_CRT_x64.msm
      tags:
        - mergemodules

    - name: Create [targetvolume] bin directory
      win_file:
        path: "{{ targetvolume | default('c') }}:\\bin"
        state: directory

    - name: Download repo
      win_uri:
        url: "https://gerrit.googlesource.com/git-repo/+/refs/tags/v2.32/repo?format=TEXT"
        dest: "{{ targetvolume | default('c') }}:\\Temp\\repo.encoded"
        method: GET
      register: repo_download_result
      tags:
        - repo

    - name: Check repo download
      assert:
        that:
        - repo_download_result.status_code == 200
        fail_msg: "Error: Repo could not be downloaded"
      tags:
        - repo

    - name: Decode repo
      win_shell: |
        $content = Get-Content -Path C:\Temp\repo.encoded
        $decoded = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($content))
        Set-Content -Path C:\bin\repo -Value $decoded
      tags:
        - repo

    - name: Check decode result
      win_shell: Test-Path C:\Temp\repo
      register: repo_downloaded

    - name: Remove repo temp file
      win_file:
        path: C:\Temp\repo.encoded
        state: absent
      tags:
        - repo

    - name: "Install repo wrapper"
      copy:
        dest: "{{ targetvolume | default('c') }}:\\bin\\repo.cmd"
        content: "@call python %~dp0\\repo %*"
      tags:
        - repo

    # Due to a silly bug in ESRlabs' Repo port, git's core.pager setting MUST
    # be set, and moreover it MUST be set to a command that exists as a .exe.
    # more is actually "more.com", and while setting core.pager to "more.com"
    # works well from a command prompt, it throws a Python error when invoked
    # via Jenkins "Gerrit Repo" source-control plugin. So, we use MSYS's
    # "cat.exe", which requires that we copy both that file and a few MSYS
    # DLLs onto the PATH.
    - name: "Copy MSYS tools to [vol]:\\bin for repo"
      win_copy:
        src: "c:\\Program Files\\Git\\usr\\bin\\{{ item }}"
        dest: "{{ targetvolume | default('c') }}:\\bin\\"
        remote_src: yes
      loop:
        - cat.exe
        - msys-2.0.dll
        - msys-iconv-2.dll
        - msys-intl-8.dll
      tags:
        - repo

    - name: Get Current PATH
      raw: $ENV:PATH
      register: path_out

    - debug: var=path_out.stdout_lines

    - name: Add tools to PATH.
      win_path:
          elements:
          - "{{ targetvolume | default('c') }}:\\bin"
          - C:\Program Files\CMake\bin
          - C:\Program Files\git\cmd
          - C:\Program Files\NASM
          - C:\Program Files\OpenSSH-Win64
          - C:\Program Files (x86)\WiX Toolset v3.11\bin

    - name: "Enable Remote Desktop"
      win_regedit:
        key: 'HKLM:\System\CurrentControlSet\Control\Terminal Server'
        name: fDenyTSConnections
        data: "0"
        type: dword
        state: present

    - name: "Open Remote Desktop in firewall"
      win_firewall_rule:
        name: "remote desktop"
        enable: yes
        state: present
        localport: "3389"
        action: allow
        direction: in
        protocol: TCP

    - name: Restore basic Windows antivirus
      win_shell: Remove-MpPreference -ExclusionPath "C:"

    - name: Exclude Jenkins from Windows antivirus
      win_shell: Add-MpPreference -ExclusionPath "{{ targetvolume | default('c') }}:\Jenkins" -ExclusionExtension "exe"

    - name: install vs2022
      include_role:
        name: "../../roles/vs2022"
        apply:
          tags:
            - never
            - visualstudio
      vars:
        PRODUCT: "{{ NODE_PRODUCT }}"
      tags:
        - never
        - visualstudio

    # bcrypt is installed in this step, and needs visual studio to be present
    - name: "Install python3 modules for testrunner"
      win_command: >-
        C:\Python310\Scripts\pip.exe install sgmllib3k==1.0.0 paramiko==2.7.1 httplib2==0.17.1 pyyaml==5.3.1
        beautifulsoup4==4.8.2 Geohash==1.0 python-geohash==0.8.5 deepdiff==4.3.2
        pyes==0.99.6 pytz==2019.3 requests==2.23.0 jsonpickle==1.3
        docker==4.2.0 decorator==4.4.2
      environment:
        LIB: C:\Program Files\OpenSSL-Win64\lib
        INCLUDE: C:\Program Files\OpenSSL-Win64\include
      tags:
        - never
        - testrunner

    - name: Install AV tooling
      win_chocolatey:
        name: "{{ item }}"
        allow_empty_checksums: "yes"
      with_items:
        - clamwin
        - 7zip.commandline
        - jdk8
      tags:
        - never
        - av

    - name: Configure profile synchronization
      include_role:
        name: "../../roles/profile"
        apply:
          tags:
            - profile
      tags:
        - profile

    - name: Install cygwin
      include_role:
        name: ../../roles/cygwin

    - name: Install asciidoctor
      win_shell: gem install asciidoctor
      args:
        executable: cmd

    - name: Install OpenSSH
      win_chocolatey:
        name: openssh
        params: /SSHServerFeature
        state: latest
      tags:
        - openssh

    - name: Ensure OpenSSH executables are pathed (machine)
      win_path:
        name: PATH
        elements: C:\Program Files\OpenSSH-Win64
        scope: machine
        state: present
      tags:
        - openssh

    - name: Ensure OpenSSH executables are pathed (user)
      win_path:
        name: PATH
        elements: C:\Program Files\OpenSSH-Win64
        scope: user
        state: present
      tags:
        - openssh

    - name: Configure ephemeral ports
      win_shell: netsh int {{ item[0] }} set dynamicport {{ item[1] }} start=1025 num=64511
      args:
        executable: cmd
      with_nested:
      - [ 'ipv4', 'ipv6' ]
      - [ 'tcp', 'udp' ]
