---
- hosts: all
  user: "{{ ansible_ssh_user }}"

  vars_files:
    - vars/main.yml

  roles:
    - geerlingguy.homebrew

  tasks:
    - name: set energy saving to zero
      shell: systemsetup -setcomputersleep Never
      become: true

    - name: ensure .zshenv exist
      copy:
        content: ""
        dest: ~/.zshenv
        force: no
        group: staff
        owner: "{{ ansible_user }}"
        mode: 0644

    - name: add homebrew to PATH
      lineinfile:
        path: ~/.zshenv
        state: present
        regexp: 'if type brew &>/dev/null; then FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH && autoload -Uz compinit && compinit; fi'
        line: 'if type brew &>/dev/null; then FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH && autoload -Uz compinit && compinit; fi'

    - name: add ruby to PATH
      lineinfile:
        path: ~/.zshenv
        state: present
        regexp: 'export PATH="/usr/local/opt/ruby/bin:/usr/local/lib/ruby/gems/{{ruby_version}}/bin:$PATH"'
        line: 'export PATH="/usr/local/opt/ruby/bin:/usr/local/lib/ruby/gems/{{ruby_version}}/bin:$HOME/.gem/ruby/{{ruby_version}}/bin:$PATH"'

    - name: add java to PATH
      lineinfile:
        path: ~/.zshenv
        state: present
        regexp: 'export PATH="/usr/local/opt/java/bin:$PATH"'
        line: 'export PATH="/usr/local/opt/java/bin:$PATH"'

    # instlall xcversion, which is used to manage xcode installation from command line
    - name: Install gem packages
      gem: name={{ item }} state=latest
      with_items:
          - xcode-install

    - name: Create jenkins's .ssh directory
      file: path=/Users/{{ ansible_ssh_user }}/.ssh state=directory owner={{ ansible_ssh_user }} mode=0700

    - name: Copy SSH config files
      copy:
        src=./ssh/{{ item }} dest=/Users/{{ ansible_ssh_user }}/.ssh/{{ item }} owner={{ ansible_ssh_user }} group=staff mode=0600
      with_items:
        - authorized_keys
        - buildbot_id_dsa
        - config
        - id_ns-codereview
        - ns-buildbot.rsa
        - patch_via_gerrit.ini

    - name: Add Jenkins' profile
      copy:
        src=./files/jenkins_profile dest=/Users/{{ ansible_ssh_user }}/.profile owner={{ ansible_ssh_user }} group=staff mode=0644

    - name: Add Jenkins' .zshrc
      copy:
        src=./files/jenkins_zshrc dest=/Users/{{ ansible_ssh_user }}/.zshrc owner={{ ansible_ssh_user }} group=staff mode=0644

    - name: Add Jenkins' gitconfig
      copy:
        src=./files/gitconfig dest=/Users/{{ ansible_ssh_user }}/.gitconfig owner={{ ansible_ssh_user }} group=staff mode=0644

    - name: Create required /opt/couchbase directory
      file: path=/opt/couchbase state=directory owner=couchbase group=staff mode=0755
      become: true

    - name: Install python 3.6
      homebrew:
        name: https://raw.githubusercontent.com/Homebrew/homebrew-core/f2a764ef944b1080be64bd88dca9a1d80130c558/Formula/python.rb
      tags: python3

    - name: Check Codesign Cert exist
      stat:
        path: /home/mdtutorials2/sample_file.txt
      register:
        cert_exist

    - name: Copy certificate to remote for import
      copy:
          src="./files/{{ p12_cert_file }}" dest="/tmp/{{ p12_cert_file }}" owner="{{ ansible_ssh_user }}" group=staff mode=0644
      with_items:
          - "{{ p12_cert_file }}"
      when: cert_exist.stat.exists == true

    - name: Import certificate
      shell: |
        security unlock-keychain -p {{ansible_ssh_pass }} /Users/{{ ansible_ssh_user }}/Library/Keychains/login.keychain
        security import /tmp/{{ p12_cert_file }} -k /Users/{{ ansible_ssh_user }}/Library/Keychains/login.keychain -P {{ p12_cert_password }} -A
        rm -f /tmp/{{ p12_cert_file }}
      args:
        executable: /bin/bash
      when: cert_exist.stat.exists == true
