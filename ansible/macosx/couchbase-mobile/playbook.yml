---
- hosts: all
  user: "{{ ansible_ssh_user }}"

  vars_files:
    - vars/main.yml

  roles:
    - geerlingguy.homebrew

  tasks:
    - name: Check if ruby is already installed
      stat:
        path: /usr/bin/ruby
      register: ruby_installed

    - name: Install ruby
      homebrew_cask: name=ruby@{{ ruby_version }} state=linked
      when: not ruby_installed.stat.exists

    - name: Install ruby-completion
      homebrew_cask: name=ruby-completion state=linked
      when: not ruby_installed.stat.exists

    - name: Check if /usr/bin/java is already installed
      stat:
        path: /usr/bin/java
      register: java_state

    - name: Install java
      homebrew_cask: name=java state=present
      when: not java_state.stat.exists

    - name: set energy saving to zero
      shell: systemsetup -setcomputersleep Never
      become: true

    - name: Add .zshenv
      copy:
        src=./files/zshenv dest=/Users/{{ ansible_ssh_user }}/.zshenv owner={{ ansible_ssh_user }} group=staff mode=0644

    - name: Upgrade pip
      command: "pip install --upgrade pip"
      ignore_errors: yes

    # SGW require pkg
    - name: Install pyinstaller's pip package
      pip:
        name: pyinstaller
        state: present
      become: true

    # Required for CBL iOS doc generation
    - name: Install gem packages
      gem: name={{ item }} state=latest
      with_items:
          - jazzy
          - xcpretty
          - slather

    # instlall xcversion, which is used to manage xcode installation from command line
    - name: Install gem packages
      gem: name={{ item }} state=latest
      with_items:
          - xcode-install

    - name: Copy SSH config files
      copy:
        src=./ssh/{{ item }} dest=/Users/"{{ ansible_ssh_user }}"/.ssh/{{ item }} owner="{{ ansible_ssh_user }}" group=staff mode=0644
      with_items:
        - authorized_keys
        - id_rsa_factory_macosx-x64-ios-builder

    - name: Copy Mobile jenkins's CB developer profile
      copy:
          src=./files/jenkins-appledeveloper.developerprofile  dest=/Users/"{{ ansible_ssh_user }}"/Download/jenkins-appledeveloper.developerprofile  owner="{{ ansible_ssh_user }}" group=staff mode=0644

    - name: Check Codesign Cert exist
      local_action: stat path={{ playbook_dir }}/files/{{ p12_cert_file }}
      register:
        cert_exist

    - name: Copy certificate to remote for import
      copy:
          src="./files/{{ p12_cert_file }}" dest="/tmp/{{ p12_cert_file }}" owner="{{ ansible_ssh_user }}" group=staff mode=0644
      with_items:
          - "{{ p12_cert_file }}"
      when: cert_exist.stat.exists == true

    - name: Import certificate
      shell: |
        security unlock-keychain -p {{ansible_ssh_pass }} /Users/{{ ansible_ssh_user }}/Library/Keychains/login.keychain
        security import /tmp/{{ p12_cert_file }} -k /Users/{{ ansible_ssh_user }}/Library/Keychains/login.keychain -P {{ p12_cert_password }} -A
        rm -f /tmp/{{ p12_cert_file }}
      args:
        executable: /bin/bash
      when: cert_exist.stat.exists == true

    # Open xcode to import profile, need a fix for this
    - debug: msg="Open xcode app -> preferences -> import /Users/couchbase/Download/jenkins-appledeveloper.developerprofile"

    - debug: msg="Password for /Users/couchbase/Download/jenkins-appledeveloper.developerprofile, should be the same as VM's password"

    - debug: msg="Also sign-in to developer account; required for xcode signing during the build"

    # Run command to enable xcode codesign to access keychain
    - debug:
        msg: "Run on command line: security set-key-partition-list -S apple-tool:,apple: -s -k KEYCHAIN_PASS  ~/Library/Keychains/login.keychain-db"
