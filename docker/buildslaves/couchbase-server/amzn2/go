#!/bin/bash -ex

TAG=$(date +%Y%m%d)
IMAGE=couchbasebuild/server-amzn2-build
. ../versions

mkdir -p build
cp -a ../../util/couchbuilder_transition_start.sh build/couchbuilder_start.sh
cp -a ../../util/swarm*.properties build
cp -a ../../util/healthcheck.sh build

ECR=284614897128.dkr.ecr.us-east-2.amazonaws.com
ECR_IMAGE=${ECR}/$(basename ${IMAGE})

if [ "$1" = "--publish" ]
then
  PUSH=--push
  # Also push to our ECR; this assumes ~/.aws/credentials is set up
  aws ecr get-login-password --region us-east-2 \
    | docker login --username AWS --password-stdin ${ECR}
fi

docker buildx build --pull ${PUSH} \
  --tag ${IMAGE}:${TAG} --tag ${ECR_IMAGE}:${TAG} \
  --platform linux/amd64,linux/arm64 \
  --target mainbuild \
  --build-arg BUILDKIT_INLINE_CACHE=1 \
  --build-arg CONTAINER_TAG_ARG=${IMAGE}:${TAG} \
  --build-arg ASCIIDOCTOR_VER=${ASCIIDOCTOR} \
  --build-arg AUTOCONF_VER=${AUTOCONF} \
  --build-arg AUTOMAKE_VER=${AUTOMAKE} \
  --build-arg CCACHE_VER=${CCACHE} \
  --build-arg CMAKE_MAJOR=${CMAKE_MAJOR} \
  --build-arg CMAKE_MINOR=${CMAKE_MINOR} \
  --build-arg CMAKE_PATCH=${CMAKE_PATCH} \
  --build-arg DOCKER_VER=${DOCKER} \
  --build-arg GCC_VER=${GCC} \
  --build-arg JNLP_AGENT_VER=${JNLP_AGENT} \
  --build-arg JRE_VERSION=${JRE_VERSION} \
  --build-arg JRE_MAJOR=${JRE_MAJOR} \
  --build-arg JRE_BUILD=${JRE_BUILD} \
  --build-arg LIBTOOL_VER=${LIBTOOL} \
  --build-arg RUBY_MAJOR=${RUBY_MAJOR} \
  --build-arg RUBY_MINOR=${RUBY_MINOR} \
  --build-arg RUBY_PATCH=${RUBY_PATCH} \
  --build-arg RUBY_INSTALL_MAJOR=${RUBY_INSTALL_MAJOR} \
  --build-arg RUBY_INSTALL_MINOR=${RUBY_INSTALL_MINOR} \
  --build-arg RUBY_INSTALL_PATCH=${RUBY_INSTALL_PATCH} \
  .

# Also ensure the RPM sidecar is updated appropriately
cd ../single/rpm-sidecar
SINGLE_LINUX_IMAGE_arm64=${IMAGE}:${TAG} ./go $1
