#!/bin/sh -ex

# Bump this when rebuilding with changes
TAG=$(date +%Y%m%d)
IMAGE=couchbasebuild/server-debian8-build
. ../versions

mkdir -p build
cp -a ../../util/couchbuilder_transition_start.sh build/couchbuilder_start.sh
cp -a ../../util/swarm*.properties build
cp -a ../../util/healthcheck.sh build

# Only copy this if it doesn't exist. Prevents re-running steps in
# this Dockerfile. This does mean that if you need to update the
# gcc, you need to manually delete this directory and rebuild.
# Note: the gcc build image is in build-infra.
if [ ! -d build/local ]
then
    docker run --rm -v $(pwd)/build:/output \
        couchbasebuild/debian-8-gcc:7.3.0 \
        cp -a /usr/local /output
fi
docker build \
  --build-arg CONTAINER_TAG_ARG=${IMAGE}:${TAG} \
  --build-arg ASCIIDOCTOR_VER=${ASCIIDOCTOR} \
  --build-arg CMAKE_MAJOR=${CMAKE_MAJOR} \
  --build-arg CMAKE_MINOR=${CMAKE_MINOR} \
  --build-arg CMAKE_PATCH=${CMAKE_PATCH} \
  --build-arg JNLP_AGENT_VER=${JNLP_AGENT} \
  --build-arg OPENSSH_VER=${OPENSSH} \
  --build-arg TINI_VER=${TINI} \
  -t ${IMAGE}:${TAG} .
docker tag ${IMAGE}:${TAG} ${IMAGE}:latest
if [ "$1" = "--publish" ]
then
  docker push ${IMAGE}:$TAG
  docker push ${IMAGE}:latest
fi
