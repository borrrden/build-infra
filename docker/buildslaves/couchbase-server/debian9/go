#!/bin/sh -ex

TAG=$(date +%Y%m%d)
IMAGE=couchbasebuild/server-debian9-build
GCC_VER=10.2.0

mkdir -p build
cp -a ../../util/couchbuilder_transition_start.sh build/couchbuilder_start.sh
cp -a ../../util/swarm*.properties build

# Only copy this if it doesn't exist. Prevents re-running steps in
# this Dockerfile. This does mean that if you need to update the
# gcc, you need to manually delete this directory and rebuild.
# Note: the gcc build image is in build-infra.
if [ ! -d build/gcc-${GCC_VER} ]
then
    docker run --rm -v $(pwd)/build:/output \
        couchbasebuild/debian-9-gcc:${GCC_VER} \
        cp -a /opt/gcc-${GCC_VER} /output
fi
docker build \
  --build-arg CONTAINER_TAG_ARG=${IMAGE}:${TAG} \
  --build-arg GCC_VER=${GCC_VER} \
  -t ${IMAGE}:${TAG} -t ${IMAGE}:latest .
if [ "$1" = "--publish" ]
then
  docker push ${IMAGE}:$TAG
  docker push ${IMAGE}:latest
fi
